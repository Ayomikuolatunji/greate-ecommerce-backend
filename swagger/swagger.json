{
  "openapi": "3.0.0",
  "info": {
    "title": "Research AI API Documentation",
    "version": "1.0.0",
    "description": "API documentation with Swagger"
  },
  "paths": {
    "/api/v1/signup": {
      "post": {
        "summary": "Register a new user",
        "description": "Registers a new user with the provided details and sends a verification token via email.",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "ayomikuolatunji@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "P@ssw0rd!"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Your account is successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Your account is successfully created"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "User already exists or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User already exists or validation error"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Encounter error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/login": {
      "post": {
        "summary": "Login user",
        "description": "Logs in a user with their email and password, returning a token and user information if successful.",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "test@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "P@ssw0rd!"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful, returns token and user info",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Login successfully"
                    },
                    "user_credentials": {
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                        },
                        "email": {
                          "type": "string",
                          "example": "test@example.com"
                        },
                        "userId": {
                          "type": "string",
                          "example": "123e4567-e89b-12d3-a456-426614174000"
                        },
                        "isVerified": {
                          "type": "boolean",
                          "example": true
                        },
                        "isEmail_verified": {
                          "type": "boolean",
                          "example": true
                        },
                        "userType": {
                          "type": "string",
                          "example": "Admin or User"
                        },
                        "avatar": {
                          "type": "string",
                          "example": "https://example.com/avatar.jpg"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid password or email not verified",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid password"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/complete-profile-registration/:id": {
      "post": {
        "summary": "Complete profile registration",
        "description": "Updates the user's profile information after email verification is completed.",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string",
                    "example": "John"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "Doe"
                  },
                  "gender": {
                    "type": "string",
                    "example": "Male"
                  }
                },
                "required": [
                  "firstName",
                  "lastName",
                  "gender"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "You have created your ABS profile."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "firstName": {
                          "type": "string",
                          "example": "John"
                        },
                        "lastName": {
                          "type": "string",
                          "example": "Doe"
                        },
                        "gender": {
                          "type": "string",
                          "example": "Male"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error, email verification required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "You are not authorized until you complete email verification"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/verify-email": {
      "post": {
        "summary": "Verify email using OTP",
        "description": "Verifies a user's email by validating the provided OTP. The email must be provided along with the OTP.",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "test@example.com"
                  },
                  "otp": {
                    "type": "string",
                    "example": "123456"
                  }
                },
                "required": [
                  "email",
                  "otp"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email successfully verified",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Login successfully"
                    },
                    "user_credentials": {
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string",
                          "example": "jwt_token"
                        },
                        "email": {
                          "type": "string",
                          "example": "test@example.com"
                        },
                        "userId": {
                          "type": "string",
                          "example": "user_id"
                        },
                        "isVerified": {
                          "type": "boolean",
                          "example": true
                        },
                        "isEmail_verified": {
                          "type": "boolean",
                          "example": true
                        },
                        "avatar": {
                          "type": "string",
                          "example": "avatar_url"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid OTP or token expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid otp or Token expired, try again"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/forgot-password": {
      "post": {
        "summary": "Request OTP for password reset",
        "description": "Allows users to request a One-Time Password (OTP) to reset their password. The user must provide a valid email.",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "test@example.com"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OTP sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "OTP sent successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid email format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid email format"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User Account not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/request-otp": {
      "post": {
        "summary": "Request OTP for email verification",
        "description": "Allows users to request a One-Time Password (OTP) for email verification. The user must provide a valid email.",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "test@example.com"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OTP sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "OTP sent successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid email format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid email format"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/verify-otp": {
      "post": {
        "summary": "Verify OTP for actions like password reset or email verification",
        "description": "Verifies the provided One-Time Password (OTP) for actions like resetting the password or verifying the email address.",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "test@example.com"
                  },
                  "otp": {
                    "type": "string",
                    "example": "123456"
                  }
                },
                "required": [
                  "email",
                  "otp"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OTP verified successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "OTP verified successfully"
                    },
                    "otp": {
                      "type": "string",
                      "example": "123456"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid OTP or token expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid OTP or token expired"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reset-password": {
      "post": {
        "summary": "Reset user password",
        "description": "Allows a user to reset their password by verifying their OTP and providing a new password.",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "test@example.com"
                  },
                  "otp": {
                    "type": "string",
                    "example": "123456"
                  },
                  "password": {
                    "type": "string",
                    "example": "newPassword123"
                  }
                },
                "required": [
                  "email",
                  "otp",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Your password has been successfully reset, you can now login"
                    },
                    "passwordReset": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid email, OTP, or token expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid email, OTP, or token expired"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "user not found!"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: OTP mismatch",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid otp"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/create-products": {
      "post": {
        "summary": "Create a new product (Admin)",
        "description": "Creates a new product with the provided details. Only accessible by Admin users.",
        "tags": [
          "Products"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Sample Product"
                  },
                  "description": {
                    "type": "string",
                    "example": "This is a sample product description."
                  },
                  "price": {
                    "type": "number",
                    "format": "float",
                    "example": 29.99
                  },
                  "size": {
                    "type": "string",
                    "example": "M"
                  },
                  "color": {
                    "type": "string",
                    "example": "Red"
                  },
                  "quantity": {
                    "type": "integer",
                    "example": 100
                  },
                  "salesCoverPicture": {
                    "type": "string",
                    "format": "binary"
                  },
                  "subImages": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                },
                "required": [
                  "name",
                  "price",
                  "quantity",
                  "salesCoverPicture"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Product created successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error or missing required fields",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Validation error"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Encounter error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/edit-products/{productId}": {
      "put": {
        "summary": "Edit an existing product (Admin)",
        "description": "Updates the details of an existing product by its ID. Only accessible by Admin users.",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "description": "ID of the product to edit",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Updated Product Name"
                  },
                  "description": {
                    "type": "string",
                    "example": "Updated product description."
                  },
                  "price": {
                    "type": "number",
                    "format": "float",
                    "example": 39.99
                  },
                  "size": {
                    "type": "string",
                    "example": "L"
                  },
                  "color": {
                    "type": "string",
                    "example": "Blue"
                  },
                  "quantity": {
                    "type": "integer",
                    "example": 50
                  },
                  "salesCoverPicture": {
                    "type": "string",
                    "format": "binary"
                  },
                  "subImages": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Product updated successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error or missing required fields",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Validation error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Product not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Encounter error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/delete-products/{productId}": {
      "delete": {
        "summary": "Delete a product (Admin)",
        "description": "Deletes an existing product by its ID. Only accessible by Admin users.",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "description": "ID of the product to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Product deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Product not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Encounter error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/search-query": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Search for products by name or description",
        "description": "Search products by a query string, with optional pagination",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Search term to look up products by name or description."
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination. Defaults to 1."
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of results per page. Defaults to 10."
          }
        ],
        "responses": {
          "200": {
            "description": "A list of matching products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "products": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product"
                      }
                    },
                    "totalProducts": {
                      "type": "integer",
                      "description": "Total number of matching products"
                    },
                    "currentPage": {
                      "type": "integer",
                      "description": "Current page of the results"
                    },
                    "totalPages": {
                      "type": "integer",
                      "description": "Total pages available"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request due to missing search query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Search query is required"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders": {
      "post": {
        "summary": "Place a new order",
        "description": "Places a new order for the authenticated user based on the items in their cart.",
        "tags": [
          "Order"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "deliveryAddress": {
                    "type": "string",
                    "example": "1234 Elm Street"
                  }
                },
                "required": [
                  "deliveryAddress"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Order successfully placed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "c3f2f6a2-dac1-47c2-9326-5d457f331b9e"
                    },
                    "userId": {
                      "type": "string",
                      "example": "7c1f9fba-42f3-4ff2-9220-57a8e4735505"
                    },
                    "totalPrice": {
                      "type": "number",
                      "example": 299.99
                    },
                    "deliveryAddress": {
                      "type": "string",
                      "example": "1234 Elm Street"
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2024-10-20T14:48:00.000Z"
                    },
                    "orderItems": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "productId": {
                            "type": "string",
                            "example": "b3a9f1d9-829f-44d5-bc79-7d3837d9b123"
                          },
                          "quantity": {
                            "type": "integer",
                            "example": 2
                          },
                          "price": {
                            "type": "number",
                            "example": 149.99
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Cart is empty or missing required fields",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Cart is empty"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "An error occurred while placing the order"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{id}": {
      "delete": {
        "summary": "Delete an order and its items",
        "description": "Deletes an order by ID along with all associated order items.",
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order and its items deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Order and its items deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Order not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Order not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Encounter error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/get-orders": {
      "get": {
        "summary": "Get all orders for a user",
        "description": "Retrieves all orders for the authenticated user.",
        "tags": [
          "Order"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Orders retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "c3f2f6a2-dac1-47c2-9326-5d457f331b9e"
                      },
                      "userId": {
                        "type": "string",
                        "example": "7c1f9fba-42f3-4ff2-9220-57a8e4735505"
                      },
                      "totalPrice": {
                        "type": "number",
                        "example": 299.99
                      },
                      "deliveryAddress": {
                        "type": "string",
                        "example": "1234 Elm Street"
                      },
                      "createdAt": {
                        "type": "string",
                        "example": "2024-10-20T14:48:00.000Z"
                      },
                      "orderItems": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "productId": {
                              "type": "string",
                              "example": "b3a9f1d9-829f-44d5-bc79-7d3837d9b123"
                            },
                            "quantity": {
                              "type": "integer",
                              "example": 2
                            },
                            "price": {
                              "type": "number",
                              "example": 149.99
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "An error occurred while fetching the orders"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/orders": {
      "get": {
        "summary": "Fetch all orders for a user",
        "tags": [
          "Orders"
        ],
        "responses": {
          "200": {
            "description": "List of user orders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "orders": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Order"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Encounter error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cart": {
      "post": {
        "summary": "Add item to cart",
        "description": "Adds a product to the authenticated user's cart. If the product already exists in the cart, its quantity will be updated.",
        "tags": [
          "Cart"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "string",
                    "example": "b3a9f1d9-829f-44d5-bc79-7d3837d9b123"
                  },
                  "quantity": {
                    "type": "integer",
                    "example": 2
                  }
                },
                "required": [
                  "productId",
                  "quantity"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Item added to cart",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Item added to cart"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "An error occurred while adding the item to the cart"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get user's cart",
        "description": "Retrieves the authenticated user's cart, including all items in the cart and associated product details.",
        "tags": [
          "Cart"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User's cart retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "a3f6b2c7-6f6f-4d6b-b876-783ca23cd34e"
                    },
                    "userId": {
                      "type": "string",
                      "example": "d7e9e1aa-f9b9-478d-8e47-5f80f1e93345"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "productId": {
                            "type": "string",
                            "example": "b3a9f1d9-829f-44d5-bc79-7d3837d9b123"
                          },
                          "quantity": {
                            "type": "integer",
                            "example": 2
                          },
                          "product": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "Laptop"
                              },
                              "price": {
                                "type": "number",
                                "example": 1200
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Cart not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Cart not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "An error occurred while retrieving the cart"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Remove item from cart",
        "description": "Removes a specified product from the authenticated user's cart.",
        "tags": [
          "Cart"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "b3a9f1d9-829f-44d5-bc79-7d3837d9b123"
            },
            "description": "ID of the product to remove from the cart"
          }
        ],
        "responses": {
          "200": {
            "description": "Item removed from cart",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Item removed from cart"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Item not found in cart",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Item not found in cart"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "An error occurred while removing the item from the cart"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/overview/stats": {
      "get": {
        "summary": "Get overview statistics",
        "description": "Fetch statistics including total users, user growth, total products, total sales, and sales growth over the last month.",
        "tags": [
          "Overview"
        ],
        "responses": {
          "200": {
            "description": "Overview statistics",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalUsers": {
                      "type": "integer",
                      "example": 1500
                    },
                    "userGrowth": {
                      "type": "integer",
                      "example": 200
                    },
                    "totalProducts": {
                      "type": "integer",
                      "example": 500
                    },
                    "totalSales": {
                      "type": "integer",
                      "example": 1200
                    },
                    "salesGrowth": {
                      "type": "integer",
                      "example": 150
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Encounter error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/transactions": {
      "get": {
        "summary": "Fetch all transactions for a user",
        "tags": [
          "Transactions"
        ],
        "responses": {
          "200": {
            "description": "List of user transactions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "transactions": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Transaction"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Encounter error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/users": {
      "get": {
        "summary": "Fetch all users (paginated)",
        "description": "Fetch all users with pagination, showing id, email, name, and other basic information.",
        "tags": [
          "Overview"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 1
            },
            "description": "Page number for pagination"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 10
            },
            "description": "Number of users per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated list of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "123e4567-e89b-12d3-a456-426614174000"
                          },
                          "email": {
                            "type": "string",
                            "example": "user@example.com"
                          },
                          "firstName": {
                            "type": "string",
                            "example": "John"
                          },
                          "lastName": {
                            "type": "string",
                            "example": "Doe"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2023-10-01T12:00:00Z"
                          },
                          "isVerified": {
                            "type": "boolean",
                            "example": true
                          },
                          "userType": {
                            "type": "string",
                            "example": "Customer"
                          }
                        }
                      }
                    },
                    "totalUsers": {
                      "type": "integer",
                      "example": 1500
                    },
                    "currentPage": {
                      "type": "integer",
                      "example": 1
                    },
                    "totalPages": {
                      "type": "integer",
                      "example": 150
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Encounter error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/profile": {
      "get": {
        "summary": "Get user profile",
        "description": "Retrieves the authenticated user's profile details.",
        "tags": [
          "User"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "studentId": {
                      "type": "string",
                      "example": "123456"
                    },
                    "email": {
                      "type": "string",
                      "example": "user@example.com"
                    },
                    "password": {
                      "type": "string",
                      "example": "hashedpassword"
                    },
                    "avatar": {
                      "type": "string",
                      "example": "https://example.com/avatar.jpg"
                    },
                    "profileCompleted": {
                      "type": "boolean",
                      "example": true
                    },
                    "tokenExpirationTime": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2024-08-01T12:34:56Z"
                    },
                    "otp": {
                      "type": "string",
                      "example": "123456"
                    },
                    "emailVerification": {
                      "type": "boolean",
                      "example": true
                    },
                    "dateOfBirth": {
                      "type": "string",
                      "format": "date",
                      "example": "2000-01-01"
                    },
                    "userName": {
                      "type": "string",
                      "example": "johndoe"
                    },
                    "firstName": {
                      "type": "string",
                      "example": "John"
                    },
                    "lastName": {
                      "type": "string",
                      "example": "Doe"
                    },
                    "institution": {
                      "type": "string",
                      "example": "University of Example"
                    },
                    "studentType": {
                      "type": "string",
                      "example": "Undergraduate"
                    },
                    "gender": {
                      "type": "string",
                      "example": "Male"
                    },
                    "department": {
                      "type": "string",
                      "example": "Computer Science"
                    },
                    "level": {
                      "type": "string",
                      "example": "200"
                    },
                    "status": {
                      "type": "string",
                      "example": "active"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-07-01T10:00:00Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2024-07-01T10:00:00Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User profile not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User profile not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "An error occurred while retrieving the profile"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}